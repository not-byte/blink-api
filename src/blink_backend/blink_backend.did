type Language = variant {
    Polish;
    English;
};

type Theme = variant {
    Dark;
    Light;
    System;
};

type Status = variant {
    Online;
    Away;
    DoNotDisturb;
    Offline;
};

type User = record {
    "principal": principal;
    username: text;
    avatar: text;
    language: Language;
    theme: Theme;
    status: Status;
};

type Text = record {
    content: text;
};

type Image = record {
    name: text;
    src: text;
};

type MessageContent = variant {
    Text: Text;
    Image: Image;
};

type Message = record {
    id: nat64;
    message: MessageContent;
    caller: principal;
    receiver: principal;
    timestamp: nat64;
};

service : {
    send_message: (principal, text) -> ();
    send_image: (principal, text, text) -> ();
    get_messages_with: (principal) -> (vec Message) query;
    remove_message: (principal, nat64) -> ();
    update_message: (principal, nat64, text) -> ();

    get_user: () -> (User) query;
    add_user: (text, opt text) -> ();
    update_user: (opt text, opt text, opt Language, opt Theme, opt Status) -> ();

    greet: () -> (text) query;

    // Remove in prod
    get_all: () -> (vec record { record { User; User }; vec Message }) query;
}
